<!--

JavaScript portscanner using XHR, seems to only work on Windows.

Written by Kasper Karlsson 2022-07-04 - 2022-07-06.

Some ports are forbidden (and thus impossible to portscan using XHR) by default, see
https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/net/base/port_util.cc
https://www-archive.mozilla.org/projects/netlib/portbanning#portlist

-->
<html>
<input id="host" value="127.0.0.1"/> Target<br/>
<input id="minPort" size="5" value="7800"/> Min port<br/>
<input id="maxPort" size="5" value="8100"/> Max port<br/>
<input id="timeout" size="4" value="1000"/> Timeout (ms)<br/>
<button onclick="portScan()">Request</button> <button onclick="clearOutput()">Clear</button>
<div id="output" />
<script>

scheme = "https://";
output = document.getElementById("output");

function writeOutput(text) {
	output.innerText += text + "\n";
}

function clearOutput() {
	output.innerText = "\n";
}

function tryPort(host, port, timeout) {
	let target = host + ":" + port;
	let url = scheme + target;
    let xhr = new XMLHttpRequest();
    xhr.open("GET", url, true);
    xhr.timeout = timeout;
    xhr.onload = function () {
		// Open port (CORS allowed)
		writeOutput(target);
    };
    xhr.ontimeout = function (e) {
        //writeOutput("Timeout");
    };
	xhr.onerror = function (e) {
		// Open port
		writeOutput(target);
	}
    xhr.send();
}

function portScan() {
	let minPort = parseInt(document.getElementById("minPort").value, 10);
	let maxPort = parseInt(document.getElementById("maxPort").value, 10);
	let timeout = parseInt(document.getElementById("timeout").value, 10);
	let host = document.getElementById("host").value;
	
	writeOutput("\nScanning " + host + ", ports " + minPort + "-" + maxPort + ", timeout " + timeout + " ms\n");
	for (port=minPort; port<maxPort; port++) {
		tryPort(host, port, timeout);
	}
	//writeOutput("All sent");
	
	setTimeout(function(){
		writeOutput("----- Timeout end -----");
	}, timeout);
}
</script>
</html>